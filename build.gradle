buildscript {
	ext {
		NEXUS_REPO_URL = 'http://192.168.1.31:8082/nexus/content/repositories'

		springBootVersion = '1.4.0.RELEASE'
		dependencyManagementVersion = '0.6.0.RELEASE'
		sshVersion = '2.2.0'
		gradleReleaseVersion = '2.4.0'

		logbackVersion = '1.1.6'
		logstashLogbackVersion = '4.7'
		janinoVersion = '3.0.1'
		slf4jVersion = '1.7.21'

		springBootAdminClientVersion = '1.4.1'
		jolokiaVersion = '1.3.4'
	}
	repositories {
		mavenCentral()

		maven {
			url 'https://plugins.gradle.org/m2/'
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.hidetake:gradle-ssh-plugin:${sshVersion}")
		classpath("net.researchgate:gradle-release:${gradleReleaseVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'spring-boot'
apply plugin: 'org.hidetake.ssh'
apply plugin: 'net.researchgate.release'
apply plugin: "io.spring.dependency-management"
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-actuator-docs')
    compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-web')

	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-starter-eureka-server')

	compile('org.springframework.retry:spring-retry')

	compile ("ch.qos.logback:logback-classic:${logbackVersion}")
	compile ("ch.qos.logback:logback-core:${logbackVersion}")
	compile ("net.logstash.logback:logstash-logback-encoder:${logstashLogbackVersion}")
	compile ("org.codehaus.janino:janino:${janinoVersion}")
	compile ("org.slf4j:slf4j-api:${slf4jVersion}")

	compile("de.codecentric:spring-boot-admin-starter-client:${springBootAdminClientVersion}")
	compile("org.jolokia:jolokia-core:${jolokiaVersion}")

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports { 
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR3"
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.14'
}

// Test
apply from: 'test.gradle'

// Publish to Nexus
apply from: 'publish.gradle'

// Deploy
apply from: 'deploy.gradle'

// Create a fully executable jar
springBoot {
	executable = true

	embeddedLaunchScriptProperties = [initInfoDescription: project.description,
									  initInfoShortDescription: project.name,
									  initInfoProvides: jar.baseName,
									  mode: 'service']
}

// Make the System.properties available in the bootRun task.
bootRun.systemProperties = System.properties

// Automatically expand info properties
processResources {
	filesMatching('**/application.yml') { expand(project.properties) }
}

ext.jenkinsNode = System.env.NODE_NAME
ext.jenkinsJobName = System.env.JOB_NAME
ext.jenkinsBuildTimestamp = System.env.BUILD_TIMESTAMP
ext.jenkinsBuildId = System.env.BUILD_ID
ext.jenkinsBuildNumber = System.env.BUILD_NUMBER
ext.jenkinsGitCommit = System.env.GIT_COMMIT_ID // Custom env variable set in the Jenkinsfile
ext.jenkinsGitBranch = System.env.BRANCH_NAME